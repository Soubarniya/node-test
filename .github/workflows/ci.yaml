name: CI/CD Workflow

# Trigger workflow on push, pull request, or manual dispatch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      name:
        description: 'Your name'
        required: true
        default: 'User'
      home:
        description: 'Your location'
        required: true
        default: 'World'

jobs:
  # Job to check out the code and set up the environment
  checkout:
    runs-on: ubuntu-latest

    steps:
      - name: Print Inputs
        run: |
          echo "Name: ${{ github.event.inputs.name }}"
          echo "Home: ${{ github.event.inputs.home }}"

      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js with cache
        uses: actions/setup-node@v4
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm install

      - name: Build code
        run: npm run build

  # CodeQL Analysis Job
  analyze:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        language: [javascript-typescript]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"

  # Build Job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: dist/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Read version from VERSION file
        id: read_version
        run: |
          VERSION=$(cat VERSION | xargs)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version extracted: $VERSION"

      - name: Build Docker image
        run: |
          docker build -t soubarniya/mynode:${{ env.VERSION }} .
          docker push soubarniya/mynode:${{ env.VERSION }}

      - name: Update Kubernetes manifest
        run: |
          git clone https://github.com/Soubarniya/argocd.git
          cd argocd
          sed -i "s|image: soubarniya/mynode:.*|image: soubarniya/mynode:${{ env.VERSION }}|" node.yaml
          git config --global user.email "leosphere2001@gmail.com"
          git config --global user.name "Soubarniya"
          if git diff --quiet; then
            echo "No changes to commit."
          else
            git add node.yaml
            git commit -m "Updated node.yaml with version ${{ env.VERSION }} | GitHub Actions Pipeline"
            git push https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/Soubarniya/argocd.git
          fi
