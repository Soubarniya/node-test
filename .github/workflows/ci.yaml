name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js with caching for dependencies
      - name: Set up Node.js with cache
        uses: actions/setup-node@v4
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      # Step 3: Install dependencies and build code
      - name: Install dependencies
        run: npm install

      - name: Build code
        run: npm run build

      # Step 4: Save the build output as an artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: dist/  # Replace 'dist/' with the correct output directory

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 5: Log in to Docker Hub (or other registry)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Read version from VERSION file
        id: read_version
        run: |
          # Read the entire content of the VERSION file and trim any surrounding whitespace
          VERSION=$(cat VERSION | xargs)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version extracted: $VERSION"

      # Step 6: Build the Docker image
      - name: Build Docker image with extracted version
        run: |
          docker build -t soubarniya/mynode:${{ env.VERSION }} .
          docker push soubarniya/mynode:${{ env.VERSION }}

#   deploy:
#     runs-on: self-hosted
#     needs: build-and-deploy
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#             # Step 2: Install kubectl
#       - name: Install kubectl
#         run: |
#           # Download kubectl binary
#           curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
#           # Make it executable
#           chmod +x kubectl
#           # Move it to a directory in the PATH
#           sudo mv kubectl /usr/local/bin/
#       - name: Set up kubectl for Minikube
#         run: |
#           # Ensure kubectl is using the Minikube context
#           # kubectl config use-context minikube
#           # Verify the Minikube status
#           kubectl get nodes
#       - name: Deploy Pod using YAML from repository
#         run: |
#           # Apply the YAML file stored in the repository
#           ls
#           kubectl apply -f ./k8s/node.yaml  
#           kubectl get svc  
#       - name: Verify Pod is Running
#         run: |
#           kubectl get pods

# ##